# Generated by Django 4.0 on 2024-04-12 15:04

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reserve', '0001_initial'),
        ('user', '0001_initial'),
        ('richmenu', '0001_initial'),
        ('question', '0001_initial'),
        ('sign', '0001_initial'),
        ('template', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyFlow',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('display_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('valid', models.BooleanField(default=False)),
                ('author', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow', to='sign.authcompany')),
            ],
            options={
                'db_table': 'company_flow',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowCondition',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'company_flow_condition',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowItem',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('x', models.IntegerField(default=0)),
                ('y', models.IntegerField(default=0)),
                ('number', models.IntegerField(default=0)),
                ('type', models.IntegerField(choices=[(0, 'none'), (1, 'template_greeting'), (2, 'template_message'), (3, 'template_video'), (4, 'template_rich_message'), (5, 'template_rich_video'), (6, 'template_card_type'), (7, 'rich_menu'), (8, 'action'), (9, 'step'), (10, 'wait'), (11, 'end'), (51, 'manual'), (52, 'timer'), (53, 'condition'), (54, 'schedule'), (55, 'result')], default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('analytics', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'company_flow_item',
            },
        ),
        migrations.CreateModel(
            name='HeadFlow',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('display_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('valid', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'head_flow',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowCondition',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'head_flow_condition',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowItem',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('x', models.IntegerField(default=0)),
                ('y', models.IntegerField(default=0)),
                ('number', models.IntegerField(default=0)),
                ('type', models.IntegerField(choices=[(0, 'none'), (1, 'template_greeting'), (2, 'template_message'), (3, 'template_video'), (4, 'template_rich_message'), (5, 'template_rich_video'), (6, 'template_card_type'), (7, 'rich_menu'), (8, 'action'), (9, 'step'), (10, 'wait'), (11, 'end'), (51, 'manual'), (52, 'timer'), (53, 'condition'), (54, 'schedule'), (55, 'result')], default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('analytics', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'head_flow_item',
            },
        ),
        migrations.CreateModel(
            name='ShopFlow',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('display_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('period_from', models.DateTimeField(blank=True, null=True)),
                ('period_to', models.DateTimeField(blank=True, null=True)),
                ('favorite_flg', models.BooleanField(default=False)),
                ('delete_flg', models.BooleanField(default=False)),
                ('author', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow', to='sign.authcompany')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow', to='flow.companyflow')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow', to='sign.authshop')),
            ],
            options={
                'db_table': 'shop_flow',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowCondition',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'shop_flow_condition',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowItem',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('x', models.IntegerField(default=0)),
                ('y', models.IntegerField(default=0)),
                ('number', models.IntegerField(default=0)),
                ('type', models.IntegerField(choices=[(0, 'none'), (1, 'template_greeting'), (2, 'template_message'), (3, 'template_video'), (4, 'template_rich_message'), (5, 'template_rich_video'), (6, 'template_card_type'), (7, 'rich_menu'), (8, 'action'), (9, 'step'), (10, 'wait'), (11, 'end'), (51, 'manual'), (52, 'timer'), (53, 'condition'), (54, 'schedule'), (55, 'result')], default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('analytics', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'shop_flow_item',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowTab',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('value', models.CharField(max_length=255, null=True)),
                ('member', models.IntegerField(choices=[(0, 'no'), (1, 'yes'), (2, 'any')], default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_tab', to='flow.shopflow')),
            ],
            options={
                'db_table': 'shop_flow_tab',
            },
        ),
        migrations.CreateModel(
            name='UserFlow',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('display_id', models.BigIntegerField()),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('end_flg', models.BooleanField(default=False)),
                ('checked_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_flow', to='flow.shopflow')),
                ('flow_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow', to='flow.shopflowitem')),
                ('flow_tab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow', to='flow.shopflowtab')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='template.shoptemplaterichmessage')),
                ('richmenu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='richmenu.shoprichmenu')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_flow', to='user.lineuser')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='template.shoptemplatevideo')),
            ],
            options={
                'db_table': 'user_flow',
            },
        ),
        migrations.CreateModel(
            name='UserFlowTimer',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('action_date', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_timer', to='user.lineuser')),
            ],
            options={
                'db_table': 'user_flow_timer',
            },
        ),
        migrations.CreateModel(
            name='UserFlowSchedule',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('display_id', models.BigIntegerField()),
                ('number', models.IntegerField(default=0)),
                ('date', models.DateTimeField(null=True)),
                ('time', models.TimeField(null=True)),
                ('join', models.IntegerField(choices=[(0, '未定'), (1, '参加'), (2, '不参加')], default=0)),
                ('memo', models.TextField(blank=True, max_length=1000, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_schedule', to='flow.userflow')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='sign.authuser')),
                ('meeting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='reserve.reserveonlinemeeting')),
                ('offline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='reserve.reserveofflinesetting')),
                ('offline_course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='reserve.reserveofflinecourse')),
                ('offline_facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='reserve.reserveofflinefacility')),
                ('online', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='reserve.reserveonlinesetting')),
                ('online_course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='reserve.reserveonlinecourse')),
                ('online_facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='reserve.reserveonlinefacility')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_flow_history', to='question.shopquestion')),
            ],
            options={
                'db_table': 'user_flow_schedule',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowTimer',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.IntegerField(choices=[(0, '即時'), (1, '日時'), (2, '経過時間')], default=0)),
                ('date', models.IntegerField(default=0)),
                ('time', models.TimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_timer', to='flow.shopflowitem')),
            ],
            options={
                'db_table': 'shop_flow_timer',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowTemplateReminder',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date', models.IntegerField(default=0)),
                ('repeat_flg', models.BooleanField(default=False)),
                ('repeat_date', models.IntegerField(default=0)),
                ('repeat_count_flg', models.BooleanField(default=False)),
                ('repeat_count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template_reminder', to='flow.shopflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template_reminder', to='template.shoptemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template_reminder', to='template.shoptemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template_reminder', to='template.shoptemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template_reminder', to='template.shoptemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template_reminder', to='template.shoptemplatevideo')),
            ],
            options={
                'db_table': 'shop_flow_template_reminder',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowTemplate',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template', to='flow.shopflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template', to='template.shoptemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template', to='template.shoptemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template', to='template.shoptemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template', to='template.shoptemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_template', to='template.shoptemplatevideo')),
            ],
            options={
                'db_table': 'shop_flow_template',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowStep',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_step', to='flow.shopflowitem')),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_step', to='flow.shopflowtab')),
            ],
            options={
                'db_table': 'shop_flow_step',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowSchedule',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_schedule', to='flow.shopflowitem')),
            ],
            options={
                'db_table': 'shop_flow_schedule',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowRichMenu',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_rich_menu', to='flow.shopflowitem')),
                ('rich_menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_rich_menu', to='richmenu.shoprichmenu')),
            ],
            options={
                'db_table': 'shop_flow_rich_menu',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowResult',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_result', to='flow.shopflowitem')),
            ],
            options={
                'db_table': 'shop_flow_result',
            },
        ),
        migrations.AddField(
            model_name='shopflowitem',
            name='flow_tab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_item', to='flow.shopflowtab'),
        ),
        migrations.CreateModel(
            name='ShopFlowConditionItem',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('type', models.IntegerField(choices=[(1, '提出'), (2, '年齢'), (3, '性別'), (4, '条件'), (5, '形式')], default=0)),
                ('text1', models.IntegerField(default=0)),
                ('text2', models.IntegerField(default=0)),
                ('radio', models.IntegerField(default=0)),
                ('check1', models.BooleanField(default=False)),
                ('check2', models.BooleanField(default=False)),
                ('check3', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_condition_item', to='flow.shopflowcondition')),
            ],
            options={
                'db_table': 'shop_flow_condition_item',
            },
        ),
        migrations.AddField(
            model_name='shopflowcondition',
            name='flow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_condition', to='flow.shopflowitem'),
        ),
        migrations.CreateModel(
            name='ShopFlowActionReminder',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date', models.IntegerField(default=0)),
                ('time', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_reminder', to='flow.shopflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_reminder', to='template.shoptemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_reminder', to='template.shoptemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_reminder', to='template.shoptemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_reminder', to='template.shoptemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_reminder', to='template.shoptemplatevideo')),
            ],
            options={
                'db_table': 'shop_flow_action_reminder',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowActionMessage',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.IntegerField(choices=[(0, '即時'), (1, '日時'), (2, '経過時間')], default=0)),
                ('date', models.IntegerField(default=0)),
                ('time', models.TimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_message', to='flow.shopflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_message', to='template.shoptemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_message', to='template.shoptemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_message', to='template.shoptemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_message', to='template.shoptemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action_message', to='template.shoptemplatevideo')),
            ],
            options={
                'db_table': 'shop_flow_action_message',
            },
        ),
        migrations.CreateModel(
            name='ShopFlowAction',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action', to='flow.shopflowtab')),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_flow_action', to='flow.shopflowitem')),
            ],
            options={
                'db_table': 'shop_flow_action',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowTimer',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.IntegerField(choices=[(0, '即時'), (1, '日時'), (2, '経過時間')], default=0)),
                ('date', models.IntegerField(default=0)),
                ('time', models.TimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_timer', to='flow.headflowitem')),
            ],
            options={
                'db_table': 'head_flow_timer',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowTemplateReminder',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date', models.IntegerField(default=0)),
                ('repeat_flg', models.BooleanField(default=False)),
                ('repeat_date', models.IntegerField(default=0)),
                ('repeat_count_flg', models.BooleanField(default=False)),
                ('repeat_count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template_reminder', to='flow.headflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_templaet_reminder', to='template.headtemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template_reminder', to='template.headtemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template_reminder', to='template.headtemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template_reminder', to='template.headtemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template_reminder', to='template.headtemplatevideo')),
            ],
            options={
                'db_table': 'head_flow_template_reminder',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowTemplate',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template', to='flow.headflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template', to='template.headtemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template', to='template.headtemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template', to='template.headtemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template', to='template.headtemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_template', to='template.headtemplatevideo')),
            ],
            options={
                'db_table': 'head_flow_template',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowTab',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('value', models.CharField(max_length=255, null=True)),
                ('member', models.IntegerField(choices=[(0, 'no'), (1, 'yes'), (2, 'any')], default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_tab', to='flow.headflow')),
            ],
            options={
                'db_table': 'head_flow_tab',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowStep',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_step', to='flow.headflowitem')),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_step', to='flow.headflowtab')),
            ],
            options={
                'db_table': 'head_flow_step',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowSchedule',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_schedule', to='flow.headflowitem')),
            ],
            options={
                'db_table': 'head_flow_schedule',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowRichMenu',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_rich_menu', to='flow.headflowitem')),
                ('rich_menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_rich_menu', to='richmenu.headrichmenu')),
            ],
            options={
                'db_table': 'head_flow_rich_menu',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowResult',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_result', to='flow.headflowitem')),
            ],
            options={
                'db_table': 'head_flow_result',
            },
        ),
        migrations.AddField(
            model_name='headflowitem',
            name='flow_tab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_item', to='flow.headflowtab'),
        ),
        migrations.CreateModel(
            name='HeadFlowConditionItem',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('type', models.IntegerField(choices=[(1, '提出'), (2, '年齢'), (3, '性別'), (4, '条件'), (5, '形式')], default=0)),
                ('text1', models.IntegerField(default=0)),
                ('text2', models.IntegerField(default=0)),
                ('radio', models.IntegerField(default=0)),
                ('check1', models.BooleanField(default=False)),
                ('check2', models.BooleanField(default=False)),
                ('check3', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_condition_item', to='flow.headflowcondition')),
            ],
            options={
                'db_table': 'head_flow_condition_item',
            },
        ),
        migrations.AddField(
            model_name='headflowcondition',
            name='flow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_condition', to='flow.headflowitem'),
        ),
        migrations.CreateModel(
            name='HeadFlowActionReminder',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date', models.IntegerField(default=0)),
                ('time', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_reminder', to='flow.headflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_reminder', to='template.headtemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_reminder', to='template.headtemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_reminder', to='template.headtemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_reminder', to='template.headtemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_reminder', to='template.headtemplatevideo')),
            ],
            options={
                'db_table': 'head_flow_action_reminder',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowActionMessage',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.IntegerField(choices=[(0, '即時'), (1, '日時'), (2, '経過時間')], default=0)),
                ('date', models.IntegerField(default=0)),
                ('time', models.TimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_message', to='flow.headflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_message', to='template.headtemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_message', to='template.headtemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_message', to='template.headtemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_message', to='template.headtemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action_message', to='template.headtemplatevideo')),
            ],
            options={
                'db_table': 'head_flow_action_message',
            },
        ),
        migrations.CreateModel(
            name='HeadFlowAction',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action', to='flow.headflowtab')),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_flow_action', to='flow.headflowitem')),
            ],
            options={
                'db_table': 'head_flow_action',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowTimer',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.IntegerField(choices=[(0, '即時'), (1, '日時'), (2, '経過時間')], default=0)),
                ('date', models.IntegerField(default=0)),
                ('time', models.TimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_timer', to='flow.companyflowitem')),
            ],
            options={
                'db_table': 'company_flow_timer',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowTemplateReminder',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date', models.IntegerField(default=0)),
                ('repeat_flg', models.BooleanField(default=False)),
                ('repeat_date', models.IntegerField(default=0)),
                ('repeat_count_flg', models.BooleanField(default=False)),
                ('repeat_count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template_reminder', to='flow.companyflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template_reminder', to='template.companytemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template_reminder', to='template.companytemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template_reminder', to='template.companytemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template_reminder', to='template.companytemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template_reminder', to='template.companytemplatevideo')),
            ],
            options={
                'db_table': 'company_flow_template_reminder',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowTemplate',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template', to='flow.companyflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template', to='template.companytemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template', to='template.companytemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template', to='template.companytemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template', to='template.companytemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_template', to='template.companytemplatevideo')),
            ],
            options={
                'db_table': 'company_flow_template',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowTab',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('value', models.CharField(max_length=255, null=True)),
                ('member', models.IntegerField(choices=[(0, 'no'), (1, 'yes'), (2, 'any')], default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_tab', to='flow.companyflow')),
            ],
            options={
                'db_table': 'company_flow_tab',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowStep',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_step', to='flow.companyflowitem')),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_step', to='flow.companyflowtab')),
            ],
            options={
                'db_table': 'company_flow_step',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowSchedule',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_schedule', to='flow.companyflowitem')),
            ],
            options={
                'db_table': 'company_flow_schedule',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowRichMenu',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_rich_menu', to='flow.companyflowitem')),
                ('rich_menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_rich_menu', to='richmenu.companyrichmenu')),
            ],
            options={
                'db_table': 'company_flow_rich_menu',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowResult',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_result', to='flow.companyflowitem')),
            ],
            options={
                'db_table': 'company_flow_result',
            },
        ),
        migrations.AddField(
            model_name='companyflowitem',
            name='flow_tab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_item', to='flow.companyflowtab'),
        ),
        migrations.CreateModel(
            name='CompanyFlowConditionItem',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=0)),
                ('type', models.IntegerField(choices=[(1, '提出'), (2, '年齢'), (3, '性別'), (4, '条件'), (5, '形式')], default=0)),
                ('text1', models.IntegerField(default=0)),
                ('text2', models.IntegerField(default=0)),
                ('radio', models.IntegerField(default=0)),
                ('check1', models.BooleanField(default=False)),
                ('check2', models.BooleanField(default=False)),
                ('check3', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_condition_item', to='flow.companyflowcondition')),
            ],
            options={
                'db_table': 'company_flow_condition_item',
            },
        ),
        migrations.AddField(
            model_name='companyflowcondition',
            name='flow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_condition', to='flow.companyflowitem'),
        ),
        migrations.CreateModel(
            name='CompanyFlowActionReminder',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date', models.IntegerField(default=0)),
                ('time', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_reminder', to='flow.companyflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_reminder', to='template.companytemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_reminder', to='template.companytemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_reminder', to='template.companytemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_reminder', to='template.companytemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_reminder', to='template.companytemplatevideo')),
            ],
            options={
                'db_table': 'company_flow_action_reminder',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowActionMessage',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.IntegerField(choices=[(0, '即時'), (1, '日時'), (2, '経過時間')], default=0)),
                ('date', models.IntegerField(default=0)),
                ('time', models.TimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_message', to='flow.companyflowitem')),
                ('template_cardtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_message', to='template.companytemplatecardtype')),
                ('template_richmessage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_message', to='template.companytemplaterichmessage')),
                ('template_richvideo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_message', to='template.companytemplaterichvideo')),
                ('template_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_message', to='template.companytemplatetext')),
                ('template_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action_message', to='template.companytemplatevideo')),
            ],
            options={
                'db_table': 'company_flow_action_message',
            },
        ),
        migrations.CreateModel(
            name='CompanyFlowAction',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action', to='flow.companyflowtab')),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_flow_action', to='flow.companyflowitem')),
            ],
            options={
                'db_table': 'company_flow_action',
            },
        ),
        migrations.AddField(
            model_name='companyflow',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_flow', to='flow.headflow'),
        ),
    ]
